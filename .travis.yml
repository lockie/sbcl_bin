language: c

env:
  global:
    - PATH=~/.roswell/bin:$PATH
    - ROSWELL_BRANCH=master
    - ROSWELL_INSTALL_DIR=$HOME/.roswell
    - LISP=sbcl-bin/2.0.0

jobs:
    include:
      - os: windows
        services: docker
        env:
          - TARGETS=x86-64
        before_install:
          - choco list -localonly
          - if [ ! -f C:/tools/msys64/msys2_shell.cmd ]; then rm -rf C:/tools/msys64; fi
          - choco uninstall -y mingw
          - choco upgrade --no-progress -y msys2
          - powershell Install-WindowsFeature Net-Framework-Core
          - choco install wixtoolset
          - export MSYS2="set PATH=%PATH%;C:\\Users\\travis\\.roswell\\bin & cmd //C RefreshEnv.cmd & set MSYS=winsymlinks:nativestrict & C:\\tools\\msys64\\msys2_shell.cmd -defterm -no-start"
          - export MINGW64="$MSYS2 -mingw64 -full-path -here -c "\"\$@"\" --"
          - export MSYS2="$MSYS2 -msys2 -c "\"\$@"\" --"
          - $MSYS2 pacman -S --noconfirm --needed autoconf automake make zlib-devel mingw-w64-x86_64-gcc mingw-w64-i686-gcc
          - export WIX="/c/Program Files (x86)/WiX Toolset v3.11"
        before_cache:
          - $MSYS2 pacman --sync --clean --noconfirm
      - os: linux
        env: TARGETS="x86-64 x86"
        addons:
          apt:
            packages:
              - lib32z1-dev
              - gcc-multilib
      - os: osx
        env: TARGETS="x86-64"
      - os: linux
        arch: arm64
        env: TARGETS=arm64
        addons:
          apt:
            packages:
              - libcurl4-openssl-dev
      - os: linux
        services: docker
        env:
          - TARGETS="x86-64 x86"
          - SUFFIX=-glibc2.10
          - DOCKER=docker.pkg.github.com/roswell/sbcl_bin/glibc2.10-sbcl1.5.7:1
      #- os: linux-ppc64le
      #  env: TARGET=ppc64le LISP=sbcl-bin/1.5.8
      - os: linux
        name: "mirror binary from sbcl.org and upload tsv"
        env: TARGET=x86-64
        script:
          - METHOD=mirror ros run -l Lakefile
        after_success:
      - os: linux
        env: TARGET=x86-64
        stage: deploy
        script:
          - METHOD=upload-build-list ros run -l Lakefile
        after_success:

cache:
  directories:
    - $HOME/.roswell
    - /C/tools/msys64

install:
  - if [ -n "$DOCKER" ]; then
       docker login docker.pkg.github.com -u snmsts -p $GITHUB_OAUTH_TOKEN;
       docker pull $DOCKER;
    fi
  - curl -L https://raw.githubusercontent.com/roswell/roswell/$ROSWELL_BRANCH/scripts/install-for-ci.sh | $MINGW64 sh
  - $MINGW64 ros install snmsts/sn.github

script:
  - "if [ -n \"$DOCKER\" ]; then
      make docker;
    else
      $MINGW64 make archives;
    fi"
after_success:
  - $MINGW64 make upload-archives
